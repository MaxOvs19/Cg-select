import { IItems } from './items.interface';

/**
 * @description Настройки селекта.
 */
export interface ICgSelect {
  /**
   * Уникальный селектор - *обязательный параметр(индефикатор), который задаеться при создании селекта.
   * @type {string}
   */
  selector?: string;
  /**
   * Необязательный параметр, в который передается элемент который будет выбран изначально в селекте.
   * @type {string}
   */
  selected?: string;
  /**
   * Placeholder  необязательный параметр, в который передается текст плейсхолдера селекта.
   * @type {string}
   */
  placeholder?: string;
  /**
   * *Обязательный параметр(эсли не указан другой способ получения данных (url)), это массив элементов,
   *  которые будут отображаться в селекте при выборе.
   * @type {IItems[] | string[] | any}
   */
  items?: IItems[] | string[] | any;
  /**
   * Необязательный параметр, который отвечает за включение светлой/темной темы по умолчанию, стоит темная тема(darkTheme == true)
   * @type {boolean}
   */
  darkTheme?: boolean;
  /**
   * Необязательный параметр, который добавляет живой поиск по элеметам селекта.
   * @type {boolean}
   */
  searchMode?: boolean;
  /**
   * Необязательный параметр, который отвечает за поведения селекта при открытии, если closeOnSelect: false,
   * тогда при выборе елемента в селекте закрытия не происходит,
   * и можно выбрать другой элемент по умолчанию, closeOnSelect:true.
   * @type {boolean}
   */
  closeOnSelect?: boolean;
  /**
   * Необязательный параметр, который отвечает за поведения селекта при открытии на мобильных усторйствах.
   * @type {boolean}
   */
  nativeSelectMode?: boolean;
  /**
   * Необязательный параметр, который отвечает за поведения селекта при открытии.
   * @type {boolean}
   */
  listDisplayMode?: boolean;
  /**
   * Необязательный параметр, отвечающий за локализацию некоторых текстовых элементов.
   * @type {string}
   */
  language?: string;
  /**
   * Необязательный параметр,который добавляет lable перед селектом.
   * @type {string}
   */
  lable?: string;
  /**
   * Необязательный параметр, который отвечает за кастомизацию элементов селекта,
   * в него передаются обьекты с CSS свойствами для кастомизируемых элементов.
   * @type {IStyle}
   */
  styles?: IStyle;
  /**
   * Необязательный параметр, который отвечает за поведения селекта, передавая в этот параметр, евент по типу 'mouseenter',
   * селект будет открываться при наведении.
   * @type {string}
   */
  event?: string;
  /**
   * Обязательный параметр(эсли не указан другой способ получения данных (items)),
   * данные которые приходят с бекэнда в формате {id:"", title: "", value: ""}.
   * @type {string}
   */
  url?: string;
  /**
   * Необязательный параметр, который отвечает за поведения селекта, добавляет возможность выбирать несколько элементов.
   * Выбранные элементы отрисовываются как обычный текст, через запятую.
   * @type {boolean}
   */
  multiselect?: boolean;
  /**
   * Необязательный параметр, который отвечает за поведения селекта,
   * для него, ***работает только в месте с подключением multiselect.
   * @type {boolean}
   */
  multiselectTag?: boolean;
}

/**
 * @description Настройки стилей.
 */
export interface IStyle {
  /**
   * Кастомизация кнопки селекта.
   * @type {object}
   */
  head?: object;
  /**
   * Кастомизация каретки.
   * @type {object}
   */
  caret?: object;
  /**
   * Кастомизация placeholder.
   * @type {object}
   */
  placeholder?: object;
  /**
   * Кастомизация lable селекта.
   * @type {object}
   */
  lable?: object;
  /**
   * Кастомизация листа с выбором элементов.
   * @type {object}
   */
  list?: object;
  /**
   * Кастомизация поиска.
   * @type {object}
   */
  search?: object;
}
